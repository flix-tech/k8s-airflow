airflow:
  image:
    repository: ci-dump-dcr.mfb.io/data/airflow
    tag: latest
    imagePullPolicy: IfNotPresent
  executor: Local
  service:
    type: NodePort
  config:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__EXPOSE_CONFIG: true
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 60
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: ci-dump-dcr.mfb.io/data/airflow
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: latest
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY: IfNotPresent
    
    AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME: airflow
    AIRFLOW__KUBERNETES__DAGS_VOLUME_CLAIM: airflow
    AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM: airflow-logs
    AIRFLOW__KUBERNETES__NAMESPACE: default

    AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: true

    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgresql:5432/airflow
    POSTGRES_HOST: airflow-postgresql
    ENV: minikube

postgresql:
  enabled: true
  postgresqlUsername: airflow
  postgresqlDatabase: airflow
  postgresqlPassword: airflow

logsPersistence:
  accessMode: ReadWriteOnce
  size: 1Gi

web:
  initialDelaySeconds: "30"

## Create or use ServiceAccount
serviceAccount:
  create: false
  name: airflow